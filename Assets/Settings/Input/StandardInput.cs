//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Settings/Input/StandardInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @StandardInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @StandardInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""StandardInput"",
    ""maps"": [
        {
            ""name"": ""GameplayMap"",
            ""id"": ""e02f8973-846d-409a-99ec-180914ef7e94"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cbe06dbc-653f-4912-9817-8c2ab3d1abac"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell1"",
                    ""type"": ""Button"",
                    ""id"": ""5829ae3a-0eec-44bc-84e4-68e736b86d0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell2"",
                    ""type"": ""Button"",
                    ""id"": ""8ff526d7-9c9b-4ce8-a46e-e372309f5af5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell3"",
                    ""type"": ""Button"",
                    ""id"": ""f5872b1a-35d7-42d8-88ea-92ef1ad8a4c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell4"",
                    ""type"": ""Button"",
                    ""id"": ""b4afbaec-2bf2-47dc-bea6-d6983bf8883c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell5"",
                    ""type"": ""Button"",
                    ""id"": ""33ea8082-53de-40a9-a3d3-14092ed3245a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell6"",
                    ""type"": ""Button"",
                    ""id"": ""58ed0b06-66b9-4011-8314-d6860802f4ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell7"",
                    ""type"": ""Button"",
                    ""id"": ""4ac86a5d-7bf7-4640-a2aa-f06e8a078384"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spell8"",
                    ""type"": ""Button"",
                    ""id"": ""35cf17bf-c238-4001-a66f-06f2c7e2c93f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""44516835-b257-46c8-abad-39ef22ace919"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltClick"",
                    ""type"": ""Button"",
                    ""id"": ""bf412cd3-b50b-471d-b533-fea7edb37f24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltDoubleClick"",
                    ""type"": ""Button"",
                    ""id"": ""3f34b3c5-d9ec-4e7c-8fc8-3d66d3d00f20"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""MultiTap"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""2d0c6642-bf07-4434-a7d6-bb22213037bc"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fa5d5556-e1e3-409d-96a2-8a7795801e7b"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c81b48e7-d304-4369-99c5-26db511530ef"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8d868b83-7fbd-44ce-a281-8dead70048af"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c0debb60-51cd-4e66-86fa-417d78d6bdf6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""eda4cdab-6259-416c-91ff-dde9fd2b0cdb"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ce7edfa-1ea3-44b8-874d-84244bba45ae"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""518ff43c-f6e8-422a-a911-eeec2d0c3777"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5de434c9-0417-48c5-a0d3-5717c628ae97"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ced5113-28cb-4bdb-8c20-01686d1cb8ee"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""984c70d2-c9c4-413a-b26f-42a5d5de2e86"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""141e7693-f065-43c1-8a16-aa54d8c19def"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AltClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eac2a2b7-4104-4f0f-99ef-5bf36abdf2d0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AltDoubleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c4f201f-0ec4-42b2-98ee-a58a8f3bcaae"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d35cb6df-5596-4f1b-a8c5-a4e8a556d07b"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64fa2808-d8d4-43d3-9816-8474de2d1239"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spell8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GameplayMap
        m_GameplayMap = asset.FindActionMap("GameplayMap", throwIfNotFound: true);
        m_GameplayMap_Move = m_GameplayMap.FindAction("Move", throwIfNotFound: true);
        m_GameplayMap_Spell1 = m_GameplayMap.FindAction("Spell1", throwIfNotFound: true);
        m_GameplayMap_Spell2 = m_GameplayMap.FindAction("Spell2", throwIfNotFound: true);
        m_GameplayMap_Spell3 = m_GameplayMap.FindAction("Spell3", throwIfNotFound: true);
        m_GameplayMap_Spell4 = m_GameplayMap.FindAction("Spell4", throwIfNotFound: true);
        m_GameplayMap_Spell5 = m_GameplayMap.FindAction("Spell5", throwIfNotFound: true);
        m_GameplayMap_Spell6 = m_GameplayMap.FindAction("Spell6", throwIfNotFound: true);
        m_GameplayMap_Spell7 = m_GameplayMap.FindAction("Spell7", throwIfNotFound: true);
        m_GameplayMap_Spell8 = m_GameplayMap.FindAction("Spell8", throwIfNotFound: true);
        m_GameplayMap_Click = m_GameplayMap.FindAction("Click", throwIfNotFound: true);
        m_GameplayMap_AltClick = m_GameplayMap.FindAction("AltClick", throwIfNotFound: true);
        m_GameplayMap_AltDoubleClick = m_GameplayMap.FindAction("AltDoubleClick", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameplayMap
    private readonly InputActionMap m_GameplayMap;
    private List<IGameplayMapActions> m_GameplayMapActionsCallbackInterfaces = new List<IGameplayMapActions>();
    private readonly InputAction m_GameplayMap_Move;
    private readonly InputAction m_GameplayMap_Spell1;
    private readonly InputAction m_GameplayMap_Spell2;
    private readonly InputAction m_GameplayMap_Spell3;
    private readonly InputAction m_GameplayMap_Spell4;
    private readonly InputAction m_GameplayMap_Spell5;
    private readonly InputAction m_GameplayMap_Spell6;
    private readonly InputAction m_GameplayMap_Spell7;
    private readonly InputAction m_GameplayMap_Spell8;
    private readonly InputAction m_GameplayMap_Click;
    private readonly InputAction m_GameplayMap_AltClick;
    private readonly InputAction m_GameplayMap_AltDoubleClick;
    public struct GameplayMapActions
    {
        private @StandardInput m_Wrapper;
        public GameplayMapActions(@StandardInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_GameplayMap_Move;
        public InputAction @Spell1 => m_Wrapper.m_GameplayMap_Spell1;
        public InputAction @Spell2 => m_Wrapper.m_GameplayMap_Spell2;
        public InputAction @Spell3 => m_Wrapper.m_GameplayMap_Spell3;
        public InputAction @Spell4 => m_Wrapper.m_GameplayMap_Spell4;
        public InputAction @Spell5 => m_Wrapper.m_GameplayMap_Spell5;
        public InputAction @Spell6 => m_Wrapper.m_GameplayMap_Spell6;
        public InputAction @Spell7 => m_Wrapper.m_GameplayMap_Spell7;
        public InputAction @Spell8 => m_Wrapper.m_GameplayMap_Spell8;
        public InputAction @Click => m_Wrapper.m_GameplayMap_Click;
        public InputAction @AltClick => m_Wrapper.m_GameplayMap_AltClick;
        public InputAction @AltDoubleClick => m_Wrapper.m_GameplayMap_AltDoubleClick;
        public InputActionMap Get() { return m_Wrapper.m_GameplayMap; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayMapActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayMapActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayMapActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayMapActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Spell1.started += instance.OnSpell1;
            @Spell1.performed += instance.OnSpell1;
            @Spell1.canceled += instance.OnSpell1;
            @Spell2.started += instance.OnSpell2;
            @Spell2.performed += instance.OnSpell2;
            @Spell2.canceled += instance.OnSpell2;
            @Spell3.started += instance.OnSpell3;
            @Spell3.performed += instance.OnSpell3;
            @Spell3.canceled += instance.OnSpell3;
            @Spell4.started += instance.OnSpell4;
            @Spell4.performed += instance.OnSpell4;
            @Spell4.canceled += instance.OnSpell4;
            @Spell5.started += instance.OnSpell5;
            @Spell5.performed += instance.OnSpell5;
            @Spell5.canceled += instance.OnSpell5;
            @Spell6.started += instance.OnSpell6;
            @Spell6.performed += instance.OnSpell6;
            @Spell6.canceled += instance.OnSpell6;
            @Spell7.started += instance.OnSpell7;
            @Spell7.performed += instance.OnSpell7;
            @Spell7.canceled += instance.OnSpell7;
            @Spell8.started += instance.OnSpell8;
            @Spell8.performed += instance.OnSpell8;
            @Spell8.canceled += instance.OnSpell8;
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
            @AltClick.started += instance.OnAltClick;
            @AltClick.performed += instance.OnAltClick;
            @AltClick.canceled += instance.OnAltClick;
            @AltDoubleClick.started += instance.OnAltDoubleClick;
            @AltDoubleClick.performed += instance.OnAltDoubleClick;
            @AltDoubleClick.canceled += instance.OnAltDoubleClick;
        }

        private void UnregisterCallbacks(IGameplayMapActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Spell1.started -= instance.OnSpell1;
            @Spell1.performed -= instance.OnSpell1;
            @Spell1.canceled -= instance.OnSpell1;
            @Spell2.started -= instance.OnSpell2;
            @Spell2.performed -= instance.OnSpell2;
            @Spell2.canceled -= instance.OnSpell2;
            @Spell3.started -= instance.OnSpell3;
            @Spell3.performed -= instance.OnSpell3;
            @Spell3.canceled -= instance.OnSpell3;
            @Spell4.started -= instance.OnSpell4;
            @Spell4.performed -= instance.OnSpell4;
            @Spell4.canceled -= instance.OnSpell4;
            @Spell5.started -= instance.OnSpell5;
            @Spell5.performed -= instance.OnSpell5;
            @Spell5.canceled -= instance.OnSpell5;
            @Spell6.started -= instance.OnSpell6;
            @Spell6.performed -= instance.OnSpell6;
            @Spell6.canceled -= instance.OnSpell6;
            @Spell7.started -= instance.OnSpell7;
            @Spell7.performed -= instance.OnSpell7;
            @Spell7.canceled -= instance.OnSpell7;
            @Spell8.started -= instance.OnSpell8;
            @Spell8.performed -= instance.OnSpell8;
            @Spell8.canceled -= instance.OnSpell8;
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
            @AltClick.started -= instance.OnAltClick;
            @AltClick.performed -= instance.OnAltClick;
            @AltClick.canceled -= instance.OnAltClick;
            @AltDoubleClick.started -= instance.OnAltDoubleClick;
            @AltDoubleClick.performed -= instance.OnAltDoubleClick;
            @AltDoubleClick.canceled -= instance.OnAltDoubleClick;
        }

        public void RemoveCallbacks(IGameplayMapActions instance)
        {
            if (m_Wrapper.m_GameplayMapActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayMapActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayMapActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayMapActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayMapActions @GameplayMap => new GameplayMapActions(this);
    public interface IGameplayMapActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSpell1(InputAction.CallbackContext context);
        void OnSpell2(InputAction.CallbackContext context);
        void OnSpell3(InputAction.CallbackContext context);
        void OnSpell4(InputAction.CallbackContext context);
        void OnSpell5(InputAction.CallbackContext context);
        void OnSpell6(InputAction.CallbackContext context);
        void OnSpell7(InputAction.CallbackContext context);
        void OnSpell8(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnAltClick(InputAction.CallbackContext context);
        void OnAltDoubleClick(InputAction.CallbackContext context);
    }
}
